version: '3.8'

services:
  # Test infrastructure
  test-postgres:
    image: postgres:15-alpine
    container_name: python-tests-postgres
    environment:
      POSTGRES_DB: driver_service_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d driver_service_test"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - integration-test-network

  test-redis:
    image: redis:7-alpine
    container_name: python-tests-redis
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - integration-test-network

  test-nats:
    image: nats:2.10-alpine
    container_name: python-tests-nats
    ports:
      - "4222:4222"
      - "8222:8222"  # HTTP monitoring
      - "6222:6222"  # Routing
    command: ["--http_port", "8222", "--js"]
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - integration-test-network

  # Driver Service (the service under test)
  driver-service:
    build:
      context: ../driver-service
      dockerfile: Dockerfile
    container_name: python-tests-driver-service
    environment:
      - DATABASE_HOST=test-postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=test_user
      - DATABASE_PASSWORD=test_password
      - DATABASE_NAME=driver_service_test
      - DATABASE_SSL_MODE=disable
      - REDIS_HOST=test-redis
      - REDIS_PORT=6379
      - NATS_URL=nats://test-nats:4222
      - HTTP_PORT=8001
      - GRPC_PORT=9001
      - METRICS_PORT=9002
      - LOG_LEVEL=debug
      - ENVIRONMENT=test
    ports:
      - "8001:8001"  # HTTP
      - "9001:9001"  # gRPC
      - "9002:9002"  # Metrics
    depends_on:
      test-postgres:
        condition: service_healthy
      test-redis:
        condition: service_healthy
      test-nats:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - integration-test-network

  # Python Integration Tests
  python-tests:
    build:
      context: .
      dockerfile: Dockerfile.tests
    container_name: python-integration-tests
    environment:
      - SERVICE_HOST=driver-service
      - SERVICE_HTTP_PORT=8001
      - SERVICE_GRPC_PORT=9001
      - SERVICE_METRICS_PORT=9002
      - TEST_DB_HOST=test-postgres
      - TEST_DB_PORT=5432
      - TEST_DB_USER=test_user
      - TEST_DB_PASSWORD=test_password
      - TEST_DB_NAME=driver_service_test
      - REDIS_HOST=test-redis
      - REDIS_PORT=6379
      - NATS_URL=nats://test-nats:4222
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
    volumes:
      - .:/app
      - test_results:/app/test-results
    depends_on:
      driver-service:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for services to be ready...' &&
        sleep 10 &&
        echo 'Starting integration tests...' &&
        python -m pytest tests/ 
          --maxfail=10
          --tb=short
          --html=test-results/report.html
          --self-contained-html
          --junitxml=test-results/junit.xml
          --cov=.
          --cov-report=html:test-results/htmlcov
          --cov-report=term-missing
          -v
      "
    networks:
      - integration-test-network

  # Test Runner for different test suites
  smoke-tests:
    extends: python-tests
    container_name: python-smoke-tests
    command: >
      sh -c "
        echo 'Running smoke tests...' &&
        python -m pytest tests/ -m smoke
          --maxfail=5
          --tb=line
          --html=test-results/smoke-report.html
          --self-contained-html
          -v
      "

  api-tests:
    extends: python-tests
    container_name: python-api-tests
    command: >
      sh -c "
        echo 'Running API tests...' &&
        python -m pytest tests/test_driver_api.py tests/test_location_api.py
          --maxfail=10
          --tb=short
          --html=test-results/api-report.html
          --self-contained-html
          -v
      "

  websocket-tests:
    extends: python-tests
    container_name: python-websocket-tests
    command: >
      sh -c "
        echo 'Running WebSocket tests...' &&
        python -m pytest tests/test_websocket.py -m websocket
          --maxfail=5
          --tb=short
          --html=test-results/websocket-report.html
          --self-contained-html
          -v
      "

  nats-tests:
    extends: python-tests
    container_name: python-nats-tests
    command: >
      sh -c "
        echo 'Running NATS event tests...' &&
        python -m pytest tests/test_nats_events.py -m nats
          --maxfail=5
          --tb=short
          --html=test-results/nats-report.html
          --self-contained-html
          -v
      "

  grpc-tests:
    extends: python-tests
    container_name: python-grpc-tests
    command: >
      sh -c "
        echo 'Running gRPC tests...' &&
        python -m pytest tests/test_grpc_api.py -m grpc
          --maxfail=5
          --tb=short
          --html=test-results/grpc-report.html
          --self-contained-html
          -v
      "

  # Performance testing with locust
  performance-tests:
    build:
      context: .
      dockerfile: Dockerfile.performance
    container_name: python-performance-tests
    environment:
      - SERVICE_HOST=driver-service
      - SERVICE_HTTP_PORT=8001
    ports:
      - "8089:8089"  # Locust web UI
    volumes:
      - .:/app
      - test_results:/app/test-results
    depends_on:
      driver-service:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Starting performance tests...' &&
        locust -f performance/locustfile.py
          --host=http://driver-service:8001
          --users=10
          --spawn-rate=2
          --run-time=60s
          --html=test-results/performance-report.html
          --headless
      "
    networks:
      - integration-test-network

  # Test cleanup service
  test-cleanup:
    image: alpine:3.18
    container_name: test-cleanup
    volumes:
      - test_postgres_data:/postgres_data
      - test_results:/test_results
    command: >
      sh -c "
        echo 'Cleaning up test data...' &&
        rm -rf /postgres_data/* 2>/dev/null || true &&
        echo 'Test cleanup completed'
      "
    networks:
      - integration-test-network

volumes:
  test_postgres_data:
  test_results:

networks:
  integration-test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16